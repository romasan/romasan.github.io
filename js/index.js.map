{"version":3,"sources":["index.js"],"names":["init","draw","SVG","genImages","genRandomPoints","copyToFromAll","render","loop","window","onload","layerName","mesh","layers","image","path","ext","size","width","height","x","y","polyline","clipWith","point","regionName","regions","copyToFrom","from","current","genRandomPoint","region","type","startTime","Date","getTime","liveTime","Math","random","movePoints","time","movePoint","a","to","all","live","progress","_corners","i","corners","cornerName","push","plot","requestAnimationFrame","onhashchange","_link","document","location","hash","substr","src","origin","console","log"],"mappings":";;AAAA,IAAIA,OAAO,SAAPA,IAAO,GAAI;;AAEdC,QAAOC,IAAI,SAAJ,CAAP;AACAC;AACAC,iBAAgB,SAAhB;AACAC;AACAD,iBAAgB,IAAhB;AACAE;AACAC;AACA,CATD;AAUAC,OAAOC,MAAP,GAAgBT,IAAhB;;AAEA,IAAIG,YAAY,SAAZA,SAAY,GAAI;;AAEnB,MAAI,IAAIO,SAAR,IAAqBC,KAAKC,MAA1B,EAAkC;;AAEjCD,OAAKC,MAAL,CAAYF,SAAZ,EAAuBG,KAAvB,GAA+BZ,KAAKY,KAAL,CAAWC,OAAOJ,SAAP,GAAmBK,GAA9B,CAA/B;;AAEAJ,OAAKC,MAAL,CAAYF,SAAZ,EAAuBG,KAAvB,CAA6BG,IAA7B,CACCL,KAAKC,MAAL,CAAYF,SAAZ,EAAuBO,KADxB,EAECN,KAAKC,MAAL,CAAYF,SAAZ,EAAuBQ,MAFxB;;AAKAP,OAAKC,MAAL,CAAYF,SAAZ,EAAuBG,KAAvB,CAA6BM,CAA7B,CAA+BR,KAAKC,MAAL,CAAYF,SAAZ,EAAuBS,CAAtD;AACAR,OAAKC,MAAL,CAAYF,SAAZ,EAAuBG,KAAvB,CAA6BO,CAA7B,CAA+BT,KAAKC,MAAL,CAAYF,SAAZ,EAAuBU,CAAtD;;AAEAT,OAAKC,MAAL,CAAYF,SAAZ,EAAuBW,QAAvB,GAAkCpB,KAAKoB,QAAL,EAAlC;AACAV,OAAKC,MAAL,CAAYF,SAAZ,EAAuBG,KAAvB,CAA6BS,QAA7B,CAAsCX,KAAKC,MAAL,CAAYF,SAAZ,EAAuBW,QAA7D;AACA;AACD,CAjBD;;AAmBA,IAAIhB,gBAAgB,SAAhBA,aAAgB,CAACkB,KAAD,EAAS;;AAE5B,MAAI,IAAIC,UAAR,IAAsBb,KAAKc,OAA3B,EAAoC;AACnCC,aAAWf,KAAKc,OAAL,CAAaD,UAAb,EAAyBD,KAApC;AACA;AACD,CALD;;AAOA,IAAIG,aAAa,SAAbA,UAAa,CAACH,KAAD,EAAS;;AAEzBA,OAAMI,IAAN,GAAa;AACZR,KAAGI,MAAMK,OAAN,CAAcT,CADL;AAEZC,KAAGG,MAAMK,OAAN,CAAcR;AAFL,EAAb;AAIA,CAND;;AAQA,IAAIS,iBAAiB,SAAjBA,cAAiB,CAASC,MAAT,EAAiBP,KAAjB,EAAwC;AAAA,KAAhBQ,IAAgB,uEAAX,SAAW;;;AAE5DR,OAAMS,SAAN,GAAkB,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACAX,OAAMY,QAAN,GAAiB,OAAOC,KAAKC,MAAL,KAAgB,IAAhB,GAAuB,CAA9B,CAAjB,CAH4D,CAGV;;AAElDd,OAAMQ,IAAN,IAAc;AACbZ,KAAG,CAACW,OAAOX,CAAP,GAAW,CAAZ,KAAmBiB,KAAKC,MAAL,KAAgBP,OAAOb,KAAxB,GAAkC,CAApD,CADU;AAEbG,KAAG,CAACU,OAAOV,CAAP,GAAW,CAAZ,KAAmBgB,KAAKC,MAAL,KAAgBP,OAAOZ,MAAxB,GAAkC,CAApD;AAFU,EAAd;AAIA,CATD;;AAWA,IAAId,kBAAkB,SAAlBA,eAAkB,CAAS2B,IAAT,EAAe;;AAEpC,MAAI,IAAIP,UAAR,IAAsBb,KAAKc,OAA3B,EAAoC;;AAEnC,MAAG,CAACd,KAAKc,OAAL,CAAaD,UAAb,EAAyBD,KAA7B,EAAoC;AACnCZ,QAAKc,OAAL,CAAaD,UAAb,EAAyBD,KAAzB,GAAiC,EAAjC;AACA;;AAEDM,iBAAelB,KAAKc,OAAL,CAAaD,UAAb,CAAf,EAAyCb,KAAKc,OAAL,CAAaD,UAAb,EAAyBD,KAAlE,EAAyEQ,IAAzE;AACA;AACD,CAVD;;AAYA,IAAIO,aAAa,SAAbA,UAAa,GAAI;;AAEpB,KAAIC,OAAO,IAAIN,IAAJ,GAAWC,OAAX,EAAX;;AAEA,MAAI,IAAIV,UAAR,IAAsBb,KAAKc,OAA3B,EAAoC;AACnCe,YAAU7B,KAAKc,OAAL,CAAaD,UAAb,CAAV,EAAoCb,KAAKc,OAAL,CAAaD,UAAb,EAAyBD,KAA7D,EAAoEgB,IAApE;AACA;AAED,CARD;;AAUA,IAAIC,YAAY,SAAZA,SAAY,CAACV,MAAD,EAASP,KAAT,EAAgBgB,IAAhB,EAAuB;;AAEtC,KAAIE,IAAI;AACPtB,KAAGI,MAAMmB,EAAN,CAASvB,CAAT,GAAaI,MAAMI,IAAN,CAAWR,CADpB;AAEPC,KAAGG,MAAMmB,EAAN,CAAStB,CAAT,GAAaG,MAAMI,IAAN,CAAWP;AAFpB,EAAR;;AAKA,KAAIuB,MAAMpB,MAAMS,SAAN,GAAkBT,MAAMY,QAAlC;AACA,KAAIS,OAAOL,OAAOhB,MAAMS,SAAxB;;AAEA,KAAGY,OAAOrB,MAAMY,QAAb,IAAyBS,OAAO,CAAnC,EAAsC;;AAErC,MAAIC,WAAW,IAAItB,MAAMY,QAAV,GAAqBS,IAApC;AACArB,QAAMK,OAAN,CAAcT,CAAd,GAAkBI,MAAMI,IAAN,CAAWR,CAAX,GAAesB,EAAEtB,CAAF,GAAM0B,QAAvC;AACAtB,QAAMK,OAAN,CAAcR,CAAd,GAAkBG,MAAMI,IAAN,CAAWP,CAAX,GAAeqB,EAAErB,CAAF,GAAMyB,QAAvC;AACA,EALD,MAKO;AACN;AACAnB,aAAWH,KAAX;AACAM,iBAAeC,MAAf,EAAuBP,KAAvB,EAA8B,IAA9B;AACA;AACDgB,QAAOhB,MAAMS,SAAb;AACA,CArBD;;AAuBA,IAAI1B,SAAS,SAATA,MAAS,GAAW;;AAEtB,MAAI,IAAII,SAAR,IAAqBC,KAAKC,MAA1B,EAAkC;;AAEjC,MAAIkC,WAAW,EAAf;;AAEA,OAAI,IAAIC,CAAR,IAAapC,KAAKC,MAAL,CAAYF,SAAZ,EAAuBsC,OAApC,EAA6C;;AAE5C,OAAIC,aAAatC,KAAKC,MAAL,CAAYF,SAAZ,EAAuBsC,OAAvB,CAA+BD,CAA/B,CAAjB;;AAEAD,YAASI,IAAT,CAAc,CACbvC,KAAKc,OAAL,CAAawB,UAAb,EAAyB1B,KAAzB,CAA+BK,OAA/B,CAAuCT,CAD1B,EAEbR,KAAKc,OAAL,CAAawB,UAAb,EAAyB1B,KAAzB,CAA+BK,OAA/B,CAAuCR,CAF1B,CAAd;AAIA;;AAEDT,OAAKC,MAAL,CAAYF,SAAZ,EAAuBW,QAAvB,CAAgC8B,IAAhC,CAAqCL,QAArC;AACA;AACF,CAlBD;;AAoBA,IAAIvC,OAAO,SAAPA,IAAO,GAAW;;AAErB6C,uBAAsB7C,IAAtB;;AAEA+B;AACAhC;AACA,CAND;;AAQAE,OAAO6C,YAAP,GAAsB,YAAI;;AAEzB,KAAIC,QAAQC,SAASC,QAAT,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8B,CAA9B,CAAZ;AACA,KAAIC,MAAOJ,SAASC,QAAT,CAAkBI,MAAlB,GAA2B,GAA3B,GAAiCN,KAA5C;AACAO,SAAQC,GAAR,CAAY,OAAZ,EAAqBH,GAArB;AACA,CALD;;AAOA,IAAI1D,OAAO,IAAX;;AAEA,IAAIa,OAAO,QAAX;AACA,IAAIC,MAAM,MAAV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAIJ,OAAO;AACT,YAAW;AACT,OAAK;AACH,QAAK,CADF;AAEH,QAAK,CAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN,GADI;AAQT,OAAK;AACH,QAAK,GADF;AAEH,QAAK,CAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN,GARI;AAeT,OAAK;AACH,QAAK,GADF;AAEH,QAAK,CAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN,GAfI;AAsBT,OAAK;AACH,QAAK,CADF;AAEH,QAAK,GAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN,GAtBI;AA6BT,OAAK;AACH,QAAK,GADF;AAEH,QAAK,GAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN,GA7BI;AAoCT,OAAK;AACH,QAAK,GADF;AAEH,QAAK,GAFF;AAGH,YAAS,GAHN;AAIH,aAAU,GAJP;AAKH,YAAS;AALN;AApCI,EADF;AA6CT,WAAU;AACR,2BAAyB;AACvB,QAAK,CADkB;AAEvB,QAAK,CAFkB;AAGvB,YAAS,GAHc;AAIvB,aAAU,GAJa;AAKvB,cAAW,CACT,GADS,EAET,GAFS,EAGT,GAHS,EAIT,GAJS;AALY,GADjB;AAaR,2BAAyB;AACvB,QAAK,GADkB;AAEvB,QAAK,CAFkB;AAGvB,YAAS,GAHc;AAIvB,aAAU,GAJa;AAKvB,cAAW,CACT,GADS,EAET,GAFS,EAGT,GAHS,EAIT,GAJS;AALY,GAbjB;AAyBR,gBAAc;AACZ,QAAK,GADO;AAEZ,QAAK,CAFO;AAGZ,YAAS,GAHG;AAIZ,aAAU,GAJE;AAKZ,cAAW;AALC;AAzBN;AA7CD,CAAX;AA+EA;AACA;AACA;AACA","file":"index.js","sourcesContent":["let init = ()=>{\n\n\tdraw = SVG('drawing');\n\tgenImages();\n\tgenRandomPoints('current');\n\tcopyToFromAll();\n\tgenRandomPoints('to');\n\trender();\n\tloop();\n};\nwindow.onload = init;\n\nlet genImages = ()=>{\n\n\tfor(var layerName in mesh.layers) {\n\t\t\n\t\tmesh.layers[layerName].image = draw.image(path + layerName + ext);\n\t\t\n\t\tmesh.layers[layerName].image.size(\n\t\t\tmesh.layers[layerName].width,\n\t\t\tmesh.layers[layerName].height\n\t\t);\n\t\t\n\t\tmesh.layers[layerName].image.x(mesh.layers[layerName].x);\n\t\tmesh.layers[layerName].image.y(mesh.layers[layerName].y);\n\t\t\n\t\tmesh.layers[layerName].polyline = draw.polyline();\n\t\tmesh.layers[layerName].image.clipWith(mesh.layers[layerName].polyline);\n\t}\n}\n\nlet copyToFromAll = (point)=>{\n\n\tfor(let regionName in mesh.regions) {\n\t\tcopyToFrom(mesh.regions[regionName].point);\n\t}\n};\n\nlet copyToFrom = (point)=>{\n\n\tpoint.from = {\n\t\tx: point.current.x,\n\t\ty: point.current.y\n\t}\n}\n\nlet genRandomPoint = function(region, point, type='current') {\n\n\tpoint.startTime = new Date().getTime();\n\tpoint.liveTime = 500 + (Math.random() * 1500 | 0);// 500 - 2000 ms.;\n\n\tpoint[type] = {\n\t\tx: (region.x | 0) + ((Math.random() * region.width ) | 0),\n\t\ty: (region.y | 0) + ((Math.random() * region.height) | 0)\n\t};\n};\n\nlet genRandomPoints = function(type) {\n\n\tfor(let regionName in mesh.regions) {\n\n\t\tif(!mesh.regions[regionName].point) {\n\t\t\tmesh.regions[regionName].point = {};\n\t\t}\n\t\t\n\t\tgenRandomPoint(mesh.regions[regionName], mesh.regions[regionName].point, type);\n\t}\n};\n\nlet movePoints = ()=>{\n\t\n\tlet time = new Date().getTime();\n\n\tfor(let regionName in mesh.regions) {\n\t\tmovePoint(mesh.regions[regionName], mesh.regions[regionName].point, time)\n\t}\n\n}\n\nlet movePoint = (region, point, time)=>{\n\n\tlet a = {\n\t\tx: point.to.x - point.from.x,\n\t\ty: point.to.y - point.from.y\n\t}\n\n\tlet all = point.startTime + point.liveTime;\n\tlet live = time - point.startTime;\n\n\tif(live < point.liveTime && live > 0) {\n\n\t\tlet progress = 1 / point.liveTime * live\n\t\tpoint.current.x = point.from.x + a.x * progress;\n\t\tpoint.current.y = point.from.y + a.y * progress;\n\t} else {\n\t\t// reset\n\t\tcopyToFrom(point);\n\t\tgenRandomPoint(region, point, 'to');\n\t}\n\ttime - point.startTime\n};\n\nvar render = function() {\n\t\t\n\t\tfor(let layerName in mesh.layers) {\n\t\t\n\t\t\tlet _corners = [];\n\t\t\t\n\t\t\tfor(let i in mesh.layers[layerName].corners) {\n\n\t\t\t\tlet cornerName = mesh.layers[layerName].corners[i];\n\n\t\t\t\t_corners.push([\n\t\t\t\t\tmesh.regions[cornerName].point.current.x,\n\t\t\t\t\tmesh.regions[cornerName].point.current.y\n\t\t\t\t]);\n\t\t\t}\n\t\t\t\n\t\t\tmesh.layers[layerName].polyline.plot(_corners);\n\t\t}\n};\n\nvar loop = function() {\n\t\n\trequestAnimationFrame(loop);\n\n\tmovePoints();\n\trender();\n};\n\nwindow.onhashchange = ()=>{\n\t\n\tvar _link = document.location.hash.substr(1);\n\tlet src =  document.location.origin + '/' + _link;\n\tconsole.log('open:', src);\n}\n\nvar draw = null;\r\n\r\nvar path = \"./res/\";\r\nvar ext = \".jpg\"\r\n\r\n// var names = [\r\n//   \"adventure-escape-game\",\r\n//   \"adventure-puzzle-game\",\r\n//   \"box5\",\r\n//   \"Candy Jump\",\r\n//   \"closedchain\",\r\n//   \"Dynamite Game\",\r\n//   \"Finger maZe 2\",\r\n//   \"Finger Ski\",\r\n//   \"Finger snowboard\",\r\n//   \"FROG JUMP (jump jump jump)\",\r\n//   \"GHOSTS\",\r\n//   \"hexagon\",\r\n//   \"lasergame (lazor game)\",\r\n//   \"lightnet\",\r\n//   \"Match 3 (ballshelf)\",\r\n//   \"match 3 firewall (bubble rush in fire)\",\r\n//   \"Match six (Hex Jewels)\",\r\n//   \"platformer (Platformer HD) (на основе Runaway HD)\",\r\n//   \"Platformer Shooter\",\r\n//   \"plumbing (Plumber Flow)\",\r\n//   \"pointsgame (Flow Connection Future)\",\r\n//   \"pointsgame\",\r\n//   \"runner (Run Fast) индиана джонс\",\r\n//   \"tank game\",\r\n//   \"threecolor (Shift It Fast)\",\r\n//   \"threecolor (Sliding Blocks)\",\r\n//   \"UPD lightnet\",\r\n//   \"webgame (untangle web)\",\r\n//   \"zuma (Arcanoid Break Classic)\",\r\n//   \"Zuma Deluxe\"\r\n// ];\r\n\r\n// corners\r\n// a b   V <-\r\n// c d   -> ^\r\n// [a, c, d, b]\r\n\r\nlet mesh = {\r\n  \"regions\": {\r\n    \"a\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"b\": {\r\n      \"x\": 160,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"c\": {\r\n      \"x\": 320,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"d\": {\r\n      \"x\": 0,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"e\": {\r\n      \"x\": 160,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"f\": {\r\n      \"x\": 320,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    }\r\n  },\r\n  \"layers\": {\r\n    \"adventure-escape-game\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\r\n        \"a\",\r\n        \"d\",\r\n        \"e\",\r\n        \"b\"\r\n      ]\r\n    },\r\n    \"adventure-puzzle-game\": {\r\n      \"x\": 160,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\r\n        \"b\",\r\n        \"e\",\r\n        \"f\",\r\n        \"c\"\r\n      ]\r\n    },\r\n    \"laser-game\": {\r\n      \"x\": 320,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": []\r\n    }\r\n  }\r\n};\r\n// \"hexagon-game\": {},\r\n// \"lazer-game\": {},\r\n// \"tanks-game\": {},\r\n// \"untangle-web-game\": {}"]}