{"version":3,"sources":["index.js"],"names":["draw","path","ext","mesh","init","SVG","genImages","genRandomPoints","copyToFromAll","render","loop","window","onload","layerName","layers","image","size","width","height","x","y","polyline","clipWith","regionName","regions","copyToFrom","point","from","current","genRandomPoint","region","type","startTime","Date","getTime","liveTime","Math","random","movePoints","time","movePoint","a","to","all","live","progress","_corners","i","corners","cornerName","push","plot","requestAnimationFrame","onhashchange","_link","document","location","hash","substr","src","origin","console","log"],"mappings":"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","file":"index.js","sourcesContent":["var draw = null;\r\n\r\nvar path = \"./res/\";\r\nvar ext = \".jpg\"\r\n\r\n// corners\r\n// a b   V <-\r\n// c d   -> ^\r\n// [a, c, d, b]\r\n\r\nlet mesh = {\r\n  \"regions\": {\r\n\t\t\"c00\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"c10\": {\r\n      \"x\": 160,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"c20\": {\r\n      \"x\": 320,\r\n      \"y\": 0,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n\t\t\"c30\" : {\r\n\t\t\t\"x\" : 480,\r\n\t\t\t\"y\" : 0,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t},\r\n\t\t// --------------------\r\n    \"c01\": {\r\n      \"x\": 0,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"c11\": {\r\n      \"x\": 160,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n    \"c21\": {\r\n      \"x\": 320,\r\n      \"y\": 240,\r\n      \"width\": 160,\r\n      \"height\": 240,\r\n      \"point\": {}\r\n    },\r\n\t\t\"c31\" : {\r\n\t\t\t\"x\" : 480,\r\n\t\t\t\"y\" : 240,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t},\r\n\t\t// ---------------------\r\n\t\t\"c02\" : {\r\n\t\t\t\"x\" : 0,\r\n\t\t\t\"y\" : 480,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t},\r\n\t\t\"c12\" : {\r\n\t\t\t\"x\" : 160,\r\n\t\t\t\"y\" : 480,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t},\r\n\t\t\"c22\" : {\r\n\t\t\t\"x\" : 320,\r\n\t\t\t\"y\" : 480,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t},\r\n\t\t\"c32\" : {\r\n\t\t\t\"x\" : 480,\r\n\t\t\t\"y\" : 480,\r\n\t\t\t\"width\" : 160,\r\n\t\t\t\"height\" : 240,\r\n\t\t\t\"point\" : {}\r\n\t\t}\r\n\t\t\r\n  },\r\n  \"layers\": {\r\n// ----------------------------------------------------------------\r\n    \"adventure-escape-game\": {\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\r\n        \"c00\", \"c01\", \"c11\", \"c10\"\r\n      ]\r\n    },\r\n    \"adventure-puzzle-game\": {\r\n      \"x\": 160,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\r\n        \"c10\", \"c11\", \"c21\", \"c20\"\r\n      ]\r\n    },\r\n    \"closed-chain-game\": {\r\n      \"x\": 320,\r\n      \"y\": 0,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\"c20\", \"c21\", \"c31\", \"c30\"]\r\n    },\r\n    \"box-five-game\": {\r\n      \"x\": 0,\r\n      \"y\": 240,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\"c01\", \"c02\", \"c12\", \"c11\"]\r\n    },\r\n    \"dynamite-game\": {\r\n      \"x\": 160,\r\n      \"y\": 240,\r\n      \"width\": 320,\r\n      \"height\": 480,\r\n      \"corners\": [\"c11\", \"c12\", \"c22\", \"c21\"]\r\n    },\r\n/*\r\n    \"avatar\": {\r\n      \"width\": 1008,\r\n      \"height\": 1008,\r\n      \"orientation\": \"vertical\",\r\n      \"x\": 0,\r\n      \"y\": 0,\r\n      \"corners\": []\r\n    },\r\n    \"adventure-escape-game\": {\r\n     \"width\": 640,\r\n     \"height\": 960,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"adventure-puzzle-game\": {\r\n     \"width\": 640,\r\n     \"height\": 960,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"arkanoid-break-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"box-five-game\": {\r\n     \"width\": 640,\r\n     \"height\": 960,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"bubble-rush-in-fire-game\": {\r\n     \"width\": 646,\r\n     \"height\": 999,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"closed-chain-game\": {\r\n     \"width\": 640,\r\n     \"height\": 960,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"dynamite-game\": {\r\n     \"width\": 640,\r\n     \"height\": 960,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"finger-maze-game\": {\r\n     \"width\": 640,\r\n     \"height\": 948,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"flow-connection-game\": {\r\n     \"width\": 640,\r\n     \"height\": 1004,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"ghosts-game\": {\r\n     \"width\": 568,\r\n     \"height\": 320,\r\n     \"orientation\": \"landscape\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"hexagon-game\": {\r\n     \"width\": 640,\r\n     \"height\": 948,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"hex-jewels-game\": {\r\n     \"width\": 646,\r\n     \"height\": 999,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"laser-game\": {\r\n     \"width\": 640,\r\n     \"height\": 948,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"light-flow-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"platformer-shooter-game\": {\r\n     \"width\": 950,\r\n     \"height\": 558,\r\n     \"orientation\": \"landscape\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"plumber-flow-game\": {\r\n     \"width\": 640,\r\n     \"height\": 1004,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"points-game\": {\r\n     \"width\": 640,\r\n     \"height\": 786,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"run-fast-game\": {\r\n     \"width\": 950,\r\n     \"height\": 558,\r\n     \"orientation\": \"landscape\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"shift-it-fast-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"sliding-blocks-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"tanks-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },\r\n    \"untangle-web-game\": {\r\n     \"width\": 646,\r\n     \"height\": 955,\r\n     \"orientation\": \"vertical\",\r\n     \"x\": 0,\r\n     \"y\": 0,\r\n     \"corners\": []\r\n    },*/\r\n// ----------------------------------------------------------------\r\n  }\r\n};\r\n// \"hexagon-game\": {},\r\n// \"lazer-game\": {},\r\n// \"tanks-game\": {},\r\n// \"untangle-web-game\": {}\r\n\nlet init = e => {\n\n\tdraw = SVG('drawing');\n\tgenImages();\n\tgenRandomPoints('current');\n\tcopyToFromAll();\n\tgenRandomPoints('to');\n\trender();\n\tloop();\n};\n\nwindow.onload = init;\n\nlet genImages = e => {\n\n\tfor(let layerName in mesh.layers) {\n\t\t\n\t\tmesh.layers[layerName].image = draw.image(path + layerName + ext);\n\t\t\n\t\tmesh.layers[layerName].image.size(\n\t\t\tmesh.layers[layerName].width,\n\t\t\tmesh.layers[layerName].height\n\t\t);\n\t\t\n\t\tmesh.layers[layerName].image.x(mesh.layers[layerName].x);\n\t\tmesh.layers[layerName].image.y(mesh.layers[layerName].y);\n\t\t\n\t\tmesh.layers[layerName].polyline = draw.polyline();\n\t\tmesh.layers[layerName].image.clipWith(mesh.layers[layerName].polyline);\n\t}\n}\n\nlet copyToFromAll = point => {\n\n\tfor(let regionName in mesh.regions) {\n\t\tcopyToFrom(mesh.regions[regionName].point);\n\t}\n};\n\nlet copyToFrom = point => {\n\n\tpoint.from = {\n\t\tx: point.current.x,\n\t\ty: point.current.y\n\t}\n}\n\nlet genRandomPoint = (region, point, type = 'current') => {\n\n\tpoint.startTime = new Date().getTime();\n\tpoint.liveTime = 500 + (Math.random() * 1500 | 0);// 500 - 2000 ms.;\n\n\tpoint[type] = {\n\t\tx: (region.x | 0) + ((Math.random() * region.width ) | 0),\n\t\ty: (region.y | 0) + ((Math.random() * region.height) | 0)\n\t};\n};\n\nlet genRandomPoints = type => {\n\n\tfor(let regionName in mesh.regions) {\n\n\t\tif(!mesh.regions[regionName].point) {\n\t\t\tmesh.regions[regionName].point = {};\n\t\t}\n\t\t\n\t\tgenRandomPoint(mesh.regions[regionName], mesh.regions[regionName].point, type);\n\t}\n};\n\nlet movePoints = e => {\n\t\n\tlet time = new Date().getTime();\n\n\tfor(let regionName in mesh.regions) {\n\t\tmovePoint(mesh.regions[regionName], mesh.regions[regionName].point, time)\n\t}\n\n}\n\nlet movePoint = (region, point, time) => {\n\n\tlet a = {\n\t\tx: point.to.x - point.from.x,\n\t\ty: point.to.y - point.from.y\n\t}\n\n\tlet all = point.startTime + point.liveTime;\n\tlet live = time - point.startTime;\n\n\tif(live < point.liveTime && live > 0) {\n\n\t\tlet progress = 1 / point.liveTime * live\n\t\tpoint.current.x = point.from.x + a.x * progress;\n\t\tpoint.current.y = point.from.y + a.y * progress;\n\t} else {\n\t\t// reset\n\t\tcopyToFrom(point);\n\t\tgenRandomPoint(region, point, 'to');\n\t}\n\ttime - point.startTime\n};\n\nvar render = e => {\n\t\t\n\t\tfor(let layerName in mesh.layers) {\n\t\t\n\t\t\tlet _corners = [];\n\t\t\t\n\t\t\tfor(let i in mesh.layers[layerName].corners) {\n\n\t\t\t\tlet cornerName = mesh.layers[layerName].corners[i];\n\n\t\t\t\t_corners.push([\n\t\t\t\t\tmesh.regions[cornerName].point.current.x,\n\t\t\t\t\tmesh.regions[cornerName].point.current.y\n\t\t\t\t]);\n\t\t\t}\n\t\t\t\n\t\t\tmesh.layers[layerName].polyline.plot(_corners);\n\t\t}\n};\n\nvar loop = e => {\n\t\n\trequestAnimationFrame(loop);\n\n\tmovePoints();\n\trender();\n};\n\nwindow.onhashchange = e => {\n\t\n\tvar _link = document.location.hash.substr(1);\n\tlet src =  document.location.origin + '/' + _link;\n\tconsole.log('open:', src);\n}\n"]}